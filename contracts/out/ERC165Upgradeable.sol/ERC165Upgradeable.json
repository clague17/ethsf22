{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "ast": {
    "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol",
    "id": 28866,
    "exportedSymbols": {
      "AddressUpgradeable": [
        28544
      ],
      "ERC165Upgradeable": [
        28865
      ],
      "IERC165Upgradeable": [
        28877
      ],
      "Initializable": [
        26278
      ]
    },
    "nodeType": "SourceUnit",
    "src": "99:1421:41",
    "nodes": [
      {
        "id": 28823,
        "nodeType": "PragmaDirective",
        "src": "99:23:41",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 28824,
        "nodeType": "ImportDirective",
        "src": "124:34:41",
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol",
        "file": "./IERC165Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28866,
        "sourceUnit": 28878,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28825,
        "nodeType": "ImportDirective",
        "src": "159:45:41",
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "../../proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 28866,
        "sourceUnit": 26279,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 28865,
        "nodeType": "ContractDefinition",
        "src": "783:736:41",
        "nodes": [
          {
            "id": 28836,
            "nodeType": "FunctionDefinition",
            "src": "862:58:41",
            "body": {
              "id": 28835,
              "nodeType": "Block",
              "src": "913:7:41",
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28833,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28832,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26223,
                  "src": "896:16:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "896:16:41"
              }
            ],
            "name": "__ERC165_init",
            "nameLocation": "871:13:41",
            "parameters": {
              "id": 28831,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "884:2:41"
            },
            "returnParameters": {
              "id": 28834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:0:41"
            },
            "scope": 28865,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 28842,
            "nodeType": "FunctionDefinition",
            "src": "926:68:41",
            "body": {
              "id": 28841,
              "nodeType": "Block",
              "src": "987:7:41",
              "statements": []
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 28839,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 28838,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26223,
                  "src": "970:16:41"
                },
                "nodeType": "ModifierInvocation",
                "src": "970:16:41"
              }
            ],
            "name": "__ERC165_init_unchained",
            "nameLocation": "935:23:41",
            "parameters": {
              "id": 28837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "958:2:41"
            },
            "returnParameters": {
              "id": 28840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "987:0:41"
            },
            "scope": 28865,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 28859,
            "nodeType": "FunctionDefinition",
            "src": "1060:166:41",
            "body": {
              "id": 28858,
              "nodeType": "Block",
              "src": "1151:75:41",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 28856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 28851,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28845,
                      "src": "1168:11:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 28853,
                            "name": "IERC165Upgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28877,
                            "src": "1188:18:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$28877_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$28877_$",
                              "typeString": "type(contract IERC165Upgradeable)"
                            }
                          ],
                          "id": 28852,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "1183:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 28854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1183:24:41",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$28877",
                          "typeString": "type(contract IERC165Upgradeable)"
                        }
                      },
                      "id": 28855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "src": "1183:36:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1168:51:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 28850,
                  "id": 28857,
                  "nodeType": "Return",
                  "src": "1161:58:41"
                }
              ]
            },
            "baseFunctions": [
              28876
            ],
            "documentation": {
              "id": 28843,
              "nodeType": "StructuredDocumentation",
              "src": "999:56:41",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1069:17:41",
            "overrides": {
              "id": 28847,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1127:8:41"
            },
            "parameters": {
              "id": 28846,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28845,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1094:11:41",
                  "nodeType": "VariableDeclaration",
                  "scope": 28859,
                  "src": "1087:18:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 28844,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1087:6:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1086:20:41"
            },
            "returnParameters": {
              "id": 28850,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28849,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 28859,
                  "src": "1145:4:41",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 28848,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1145:4:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1144:6:41"
            },
            "scope": 28865,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 28864,
            "nodeType": "VariableDeclaration",
            "src": "1491:25:41",
            "constant": false,
            "documentation": {
              "id": 28860,
              "nodeType": "StructuredDocumentation",
              "src": "1232:254:41",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1511:5:41",
            "scope": 28865,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 28861,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1491:7:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 28863,
              "length": {
                "hexValue": "3530",
                "id": 28862,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1499:2:41",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1491:11:41",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 28827,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26278,
              "src": "822:13:41"
            },
            "id": 28828,
            "nodeType": "InheritanceSpecifier",
            "src": "822:13:41"
          },
          {
            "baseName": {
              "id": 28829,
              "name": "IERC165Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28877,
              "src": "837:18:41"
            },
            "id": 28830,
            "nodeType": "InheritanceSpecifier",
            "src": "837:18:41"
          }
        ],
        "canonicalName": "ERC165Upgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 28826,
          "nodeType": "StructuredDocumentation",
          "src": "206:576:41",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          28865,
          28877,
          26278
        ],
        "name": "ERC165Upgradeable",
        "nameLocation": "801:17:41",
        "scope": 28866,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 41
}